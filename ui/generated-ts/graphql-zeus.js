/* tslint:disable */
/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	Activity:{
		agent:{
			filter:{
				type:"AgentFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		user:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	ActivityFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"ActivityFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ActivityInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		agent:{
			type:"AgentRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ActivityOrder:{
		asc:{
			type:"ActivityOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"ActivityOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"ActivityOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ActivityOrderable: "enum",
	ActivityRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Agent:{
		user:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movement:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		contacts:{
			filter:{
				type:"ContactFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ContactOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notes:{
			filter:{
				type:"NoteFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"NoteOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		activities:{
			filter:{
				type:"ActivityFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ActivityOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	AgentFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"AgentFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	AgentInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:true
		},
		contacts:{
			type:"ContactRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"NoteRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		activities:{
			type:"ActivityRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	AgentOrder:{
		asc:{
			type:"AgentOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"AgentOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"AgentOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	AgentOrderable: "enum",
	AgentRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Article:{
		movements:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	ArticleFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"ArticleFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"ArticleFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"ArticleFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ArticleInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		preview:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		content:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	ArticleOrder:{
		asc:{
			type:"ArticleOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"ArticleOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"ArticleOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ArticleOrderable: "enum",
	ArticleRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Candidate:{
		elections:{
			filter:{
				type:"ElectionFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ElectionOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movements:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	CandidateFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"CandidateFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	CandidateInput:{
		firstName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		lastName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		elections:{
			type:"ElectionRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		platform:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	CandidateOrder:{
		asc:{
			type:"CandidateOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"CandidateOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"CandidateOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	CandidateOrderable: "enum",
	CandidateRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Company:{
		boycotting:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		supporting:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	CompanyFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"CompanyFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"CompanyFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"CompanyFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	CompanyInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		boycotting:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supporting:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	CompanyOrder:{
		asc:{
			type:"CompanyOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"CompanyOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"CompanyOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	CompanyOrderable: "enum",
	CompanyRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Contact:{
		user:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movement:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		notes:{
			filter:{
				type:"NoteFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"NoteOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		assignedAgents:{
			filter:{
				type:"AgentFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"AgentOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	ContactFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"ContactFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ContactInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		phoneNumber:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"NoteRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		assignedAgents:{
			type:"AgentRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	ContactOrder:{
		asc:{
			type:"ContactOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"ContactOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"ContactOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ContactOrderable: "enum",
	ContactRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	DateTime: "String",
	DateTimeFilter:{
		eq:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		le:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		lt:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		ge:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		gt:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	DgraphIndex: "enum",
	Donation:{
		user:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		fundRaisingDrive:{
			filter:{
				type:"FundRaisingDriveFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	DonationFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"DonationFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	DonationInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:true
		},
		fundRaisingDrive:{
			type:"FundRaisingDriveRef",
			array:false,
			arrayRequired:false,
			required:true
		},
		amountDollars:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		amountCents:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	DonationOrder:{
		asc:{
			type:"DonationOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"DonationOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"DonationOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	DonationOrderable: "enum",
	DonationRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Election:{
		candidates:{
			filter:{
				type:"CandidateFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"CandidateOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		issues:{
			filter:{
				type:"IssueFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"IssueOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	ElectionFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"ElectionFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"ElectionFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"ElectionFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ElectionInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		date:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:true
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		electionType:{
			type:"ElectionType",
			array:false,
			arrayRequired:false,
			required:false
		},
		candidates:{
			type:"CandidateRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		issues:{
			type:"IssueRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	ElectionOrder:{
		asc:{
			type:"ElectionOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"ElectionOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"ElectionOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ElectionOrderable: "enum",
	ElectionRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	ElectionType: "enum",
	Event:{
		movements:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	EventFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"EventFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"EventFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"EventFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	EventInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		date:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		body:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	EventOrder:{
		asc:{
			type:"EventOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"EventOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"EventOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	EventOrderable: "enum",
	EventRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	FloatFilter:{
		eq:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:false
		},
		le:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:false
		},
		lt:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:false
		},
		ge:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:false
		},
		gt:{
			type:"Float",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	FundRaisingDrive:{
		donations:{
			filter:{
				type:"DonationFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"DonationOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movement:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	FundRaisingDriveFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"FundRaisingDriveFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"FundRaisingDriveFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"FundRaisingDriveFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	FundRaisingDriveInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		goalType:{
			type:"GoalType",
			array:false,
			arrayRequired:false,
			required:false
		},
		donations:{
			type:"DonationRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	FundRaisingDriveOrder:{
		asc:{
			type:"FundRaisingDriveOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"FundRaisingDriveOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"FundRaisingDriveOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	FundRaisingDriveOrderable: "enum",
	FundRaisingDriveRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	GoalType: "enum",
	IntFilter:{
		eq:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		le:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		lt:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		ge:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		gt:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	Issue:{
		elections:{
			filter:{
				type:"ElectionFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ElectionOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movements:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	IssueFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"IssueFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	IssueInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		elections:{
			type:"ElectionRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		summary:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		content:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	IssueOrder:{
		asc:{
			type:"IssueOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"IssueOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"IssueOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	IssueOrderable: "enum",
	IssueRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	ItemFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"ItemFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ItemOrder:{
		asc:{
			type:"ItemOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"ItemOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"ItemOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ItemOrderable: "enum",
	ItemRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	LandingPage:{
		layout:{
			filter:{
				type:"LayoutFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	LandingPageFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"LandingPageFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"LandingPageFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"LandingPageFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	LandingPageInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		layout:{
			type:"LayoutRef",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	LandingPageOrder:{
		asc:{
			type:"LandingPageOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"LandingPageOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"LandingPageOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	LandingPageOrderable: "enum",
	LandingPageRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Layout:{
		landingPage:{
			filter:{
				type:"LandingPageFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"LandingPageOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	LayoutFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"LayoutFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	LayoutInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		landingPage:{
			type:"LandingPageRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	LayoutOrder:{
		asc:{
			type:"LayoutOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"LayoutOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"LayoutOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	LayoutOrderable: "enum",
	LayoutRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Movement:{
		tags:{
			filter:{
				type:"TagFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"TagOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		owner:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		homePage:{
			filter:{
				type:"LandingPageFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		landingPages:{
			filter:{
				type:"LandingPageFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"LandingPageOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		articles:{
			filter:{
				type:"ArticleFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ArticleOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		supportingCompanies:{
			filter:{
				type:"CompanyFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"CompanyOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		boycottingCompanies:{
			filter:{
				type:"CompanyFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"CompanyOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		candidates:{
			filter:{
				type:"CandidateFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"CandidateOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		issues:{
			filter:{
				type:"IssueFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"IssueOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		supporters:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"UserOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		friends:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		events:{
			filter:{
				type:"EventFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"EventOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		opportunities:{
			filter:{
				type:"OpportunityFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"OpportunityOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		petitions:{
			filter:{
				type:"PetitionFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"PetitionOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		contacts:{
			filter:{
				type:"ContactFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ContactOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		polls:{
			filter:{
				type:"PollFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"PollOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		fundRaisingDrives:{
			filter:{
				type:"FundRaisingDriveFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"FundRaisingDriveOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		agents:{
			filter:{
				type:"AgentFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"AgentOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	MovementFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		title:{
			type:"StringTermFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		regionality:{
			type:"Regionality",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"StringFullTextFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"MovementFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"MovementFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"MovementFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	MovementInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		regionality:{
			type:"Regionality",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		tags:{
			type:"TagRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:true
		},
		homePage:{
			type:"LandingPageRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		landingPages:{
			type:"LandingPageRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		articles:{
			type:"ArticleRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supportingCompanies:{
			type:"CompanyRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		boycottingCompanies:{
			type:"CompanyRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		candidates:{
			type:"CandidateRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		issues:{
			type:"IssueRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supporters:{
			type:"UserRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		friends:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		events:{
			type:"EventRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		opportunities:{
			type:"OpportunityRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		contacts:{
			type:"ContactRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		polls:{
			type:"PollRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		fundRaisingDrives:{
			type:"FundRaisingDriveRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		agents:{
			type:"AgentRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	MovementOrder:{
		asc:{
			type:"MovementOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"MovementOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"MovementOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	MovementOrderable: "enum",
	MovementRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Mutation:{
		updateItem:{
			input:{
				type:"UpdateItemInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteItem:{
			filter:{
				type:"ItemFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addUser:{
			input:{
				type:"UserInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateUser:{
			input:{
				type:"UpdateUserInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteUser:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addMovement:{
			input:{
				type:"MovementInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateMovement:{
			input:{
				type:"UpdateMovementInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteMovement:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addLandingPage:{
			input:{
				type:"LandingPageInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateLandingPage:{
			input:{
				type:"UpdateLandingPageInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteLandingPage:{
			filter:{
				type:"LandingPageFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addLayout:{
			input:{
				type:"LayoutInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateLayout:{
			input:{
				type:"UpdateLayoutInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteLayout:{
			filter:{
				type:"LayoutFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addElection:{
			input:{
				type:"ElectionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateElection:{
			input:{
				type:"UpdateElectionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteElection:{
			filter:{
				type:"ElectionFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addCandidate:{
			input:{
				type:"CandidateInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateCandidate:{
			input:{
				type:"UpdateCandidateInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteCandidate:{
			filter:{
				type:"CandidateFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addIssue:{
			input:{
				type:"IssueInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateIssue:{
			input:{
				type:"UpdateIssueInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteIssue:{
			filter:{
				type:"IssueFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addCompany:{
			input:{
				type:"CompanyInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateCompany:{
			input:{
				type:"UpdateCompanyInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteCompany:{
			filter:{
				type:"CompanyFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addArticle:{
			input:{
				type:"ArticleInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateArticle:{
			input:{
				type:"UpdateArticleInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteArticle:{
			filter:{
				type:"ArticleFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addEvent:{
			input:{
				type:"EventInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateEvent:{
			input:{
				type:"UpdateEventInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteEvent:{
			filter:{
				type:"EventFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addOpportunity:{
			input:{
				type:"OpportunityInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateOpportunity:{
			input:{
				type:"UpdateOpportunityInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteOpportunity:{
			filter:{
				type:"OpportunityFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addPetition:{
			input:{
				type:"PetitionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updatePetition:{
			input:{
				type:"UpdatePetitionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deletePetition:{
			filter:{
				type:"PetitionFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addPoll:{
			input:{
				type:"PollInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updatePoll:{
			input:{
				type:"UpdatePollInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deletePoll:{
			filter:{
				type:"PollFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addRespondant:{
			input:{
				type:"RespondantInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateRespondant:{
			input:{
				type:"UpdateRespondantInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteRespondant:{
			filter:{
				type:"RespondantFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addQuestion:{
			input:{
				type:"QuestionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateQuestion:{
			input:{
				type:"UpdateQuestionInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteQuestion:{
			filter:{
				type:"QuestionFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addResponse:{
			input:{
				type:"ResponseInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateResponse:{
			input:{
				type:"UpdateResponseInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteResponse:{
			filter:{
				type:"ResponseFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addTag:{
			input:{
				type:"TagInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateTag:{
			input:{
				type:"UpdateTagInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteTag:{
			filter:{
				type:"TagFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addFundRaisingDrive:{
			input:{
				type:"FundRaisingDriveInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateFundRaisingDrive:{
			input:{
				type:"UpdateFundRaisingDriveInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteFundRaisingDrive:{
			filter:{
				type:"FundRaisingDriveFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addDonation:{
			input:{
				type:"DonationInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateDonation:{
			input:{
				type:"UpdateDonationInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteDonation:{
			filter:{
				type:"DonationFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addAgent:{
			input:{
				type:"AgentInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateAgent:{
			input:{
				type:"UpdateAgentInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteAgent:{
			filter:{
				type:"AgentFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addNote:{
			input:{
				type:"NoteInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateNote:{
			input:{
				type:"UpdateNoteInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteNote:{
			filter:{
				type:"NoteFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addActivity:{
			input:{
				type:"ActivityInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateActivity:{
			input:{
				type:"UpdateActivityInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteActivity:{
			filter:{
				type:"ActivityFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		addContact:{
			input:{
				type:"ContactInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		updateContact:{
			input:{
				type:"UpdateContactInput",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		deleteContact:{
			filter:{
				type:"ContactFilter",
				array:false,
				arrayRequired:false,
				required:true
			}
		}
	},
	Note:{
		agent:{
			filter:{
				type:"AgentFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		contact:{
			filter:{
				type:"ContactFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	NoteFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"NoteFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	NoteInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		agent:{
			type:"AgentRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		contact:{
			type:"ContactRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	NoteOrder:{
		asc:{
			type:"NoteOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"NoteOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"NoteOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	NoteOrderable: "enum",
	NoteRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Opportunity:{
		movement:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		volunteers:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"UserOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	OpportunityFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"OpportunityFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	OpportunityInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		date:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		body:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:true
		},
		volunteers:{
			type:"UserRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	OpportunityOrder:{
		asc:{
			type:"OpportunityOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"OpportunityOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"OpportunityOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	OpportunityOrderable: "enum",
	OpportunityRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	PatchActivity:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		agent:{
			type:"AgentRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchAgent:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		contacts:{
			type:"ContactRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"NoteRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		activities:{
			type:"ActivityRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchArticle:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		preview:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		content:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchCandidate:{
		firstName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		lastName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		elections:{
			type:"ElectionRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		platform:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchCompany:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		name:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		boycotting:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supporting:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchContact:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		phoneNumber:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		email:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		address:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		notes:{
			type:"NoteRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		assignedAgents:{
			type:"AgentRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchDonation:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		fundRaisingDrive:{
			type:"FundRaisingDriveRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		amountDollars:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		amountCents:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchElection:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		date:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		electionType:{
			type:"ElectionType",
			array:false,
			arrayRequired:false,
			required:false
		},
		candidates:{
			type:"CandidateRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		issues:{
			type:"IssueRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchEvent:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		date:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		body:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchFundRaisingDrive:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		goalType:{
			type:"GoalType",
			array:false,
			arrayRequired:false,
			required:false
		},
		donations:{
			type:"DonationRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchIssue:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		elections:{
			type:"ElectionRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		summary:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		content:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchItem:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchLandingPage:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		layout:{
			type:"LayoutRef",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchLayout:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		landingPage:{
			type:"LandingPageRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchMovement:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		regionality:{
			type:"Regionality",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		tags:{
			type:"TagRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		owner:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		homePage:{
			type:"LandingPageRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		landingPages:{
			type:"LandingPageRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		articles:{
			type:"ArticleRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supportingCompanies:{
			type:"CompanyRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		boycottingCompanies:{
			type:"CompanyRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		candidates:{
			type:"CandidateRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		issues:{
			type:"IssueRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supporters:{
			type:"UserRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		friends:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		events:{
			type:"EventRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		opportunities:{
			type:"OpportunityRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		contacts:{
			type:"ContactRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		polls:{
			type:"PollRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		fundRaisingDrives:{
			type:"FundRaisingDriveRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		agents:{
			type:"AgentRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchNote:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		agent:{
			type:"AgentRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		contact:{
			type:"ContactRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		text:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchOpportunity:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		date:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		body:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movement:{
			type:"MovementRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		volunteers:{
			type:"UserRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchPetition:{
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		body:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		goal:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		signers:{
			type:"UserRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchPoll:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		respondants:{
			type:"RespondantRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		questions:{
			type:"QuestionRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchQuestion:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		question:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		choices:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchRespondant:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		responses:{
			type:"ResponseRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PatchResponse:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		respondant:{
			type:"RespondantRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		question:{
			type:"QuestionRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		answer:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchTag:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		icon:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PatchUser:{
		firstName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		lastName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		displayName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		bio:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movementsOwned:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		donationsMade:{
			type:"FundRaisingDriveRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supporting:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		volunteeringAt:{
			type:"OpportunityRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PersonOrder:{
		asc:{
			type:"PersonOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"PersonOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"PersonOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PersonOrderable: "enum",
	Petition:{
		signers:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"UserOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movements:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	PetitionFilter:{
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"PetitionFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"PetitionFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"PetitionFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PetitionInput:{
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		body:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		goal:{
			type:"Int",
			array:false,
			arrayRequired:false,
			required:false
		},
		signers:{
			type:"UserRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PetitionOrder:{
		asc:{
			type:"PetitionOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"PetitionOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"PetitionOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PetitionOrderable: "enum",
	Poll:{
		respondants:{
			filter:{
				type:"RespondantFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"RespondantOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		questions:{
			filter:{
				type:"QuestionFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		movements:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	PollFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"PollFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"PollFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"PollFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PollInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		respondants:{
			type:"RespondantRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		questions:{
			type:"QuestionRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		movements:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	PollOrder:{
		asc:{
			type:"PollOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"PollOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"PollOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	PollOrderable: "enum",
	PollRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	ProductType: "enum",
	Query:{
		getItem:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryItem:{
			filter:{
				type:"ItemFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ItemOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		queryPerson:{
			order:{
				type:"PersonOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getUser:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryUser:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"UserOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getMovement:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryMovement:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getLandingPage:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryLandingPage:{
			filter:{
				type:"LandingPageFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"LandingPageOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getLayout:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryLayout:{
			filter:{
				type:"LayoutFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"LayoutOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getElection:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryElection:{
			filter:{
				type:"ElectionFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ElectionOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getCandidate:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryCandidate:{
			filter:{
				type:"CandidateFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"CandidateOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getIssue:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryIssue:{
			filter:{
				type:"IssueFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"IssueOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getCompany:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryCompany:{
			filter:{
				type:"CompanyFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"CompanyOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getArticle:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryArticle:{
			filter:{
				type:"ArticleFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ArticleOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getEvent:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryEvent:{
			filter:{
				type:"EventFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"EventOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getOpportunity:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryOpportunity:{
			filter:{
				type:"OpportunityFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"OpportunityOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		queryPetition:{
			filter:{
				type:"PetitionFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"PetitionOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getPoll:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryPoll:{
			filter:{
				type:"PollFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"PollOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getRespondant:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryRespondant:{
			filter:{
				type:"RespondantFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"RespondantOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getQuestion:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryQuestion:{
			filter:{
				type:"QuestionFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"QuestionOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getResponse:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryResponse:{
			filter:{
				type:"ResponseFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ResponseOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getTag:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryTag:{
			filter:{
				type:"TagFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"TagOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getFundRaisingDrive:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryFundRaisingDrive:{
			filter:{
				type:"FundRaisingDriveFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"FundRaisingDriveOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getDonation:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryDonation:{
			filter:{
				type:"DonationFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"DonationOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getAgent:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryAgent:{
			filter:{
				type:"AgentFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"AgentOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getNote:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryNote:{
			filter:{
				type:"NoteFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"NoteOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getActivity:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryActivity:{
			filter:{
				type:"ActivityFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ActivityOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		getContact:{
			id:{
				type:"ID",
				array:false,
				arrayRequired:false,
				required:true
			}
		},
		queryContact:{
			filter:{
				type:"ContactFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ContactOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	QuestionFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"QuestionFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	QuestionInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		question:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		choices:{
			type:"String",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	QuestionOrder:{
		asc:{
			type:"QuestionOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"QuestionOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"QuestionOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	QuestionOrderable: "enum",
	QuestionRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Regionality: "enum",
	Respondant:{
		user:{
			filter:{
				type:"UserFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		responses:{
			filter:{
				type:"ResponseFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"ResponseOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	RespondantFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"RespondantFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	RespondantInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		user:{
			type:"UserRef",
			array:false,
			arrayRequired:false,
			required:true
		},
		responses:{
			type:"ResponseRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	RespondantOrder:{
		asc:{
			type:"RespondantOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"RespondantOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"RespondantOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	RespondantOrderable: "enum",
	RespondantRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	Response:{
		respondant:{
			filter:{
				type:"RespondantFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		question:{
			filter:{
				type:"QuestionFilter",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	ResponseFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"ResponseFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ResponseInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		respondant:{
			type:"RespondantRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		question:{
			type:"QuestionRef",
			array:false,
			arrayRequired:false,
			required:false
		},
		answer:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ResponseOrder:{
		asc:{
			type:"ResponseOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"ResponseOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"ResponseOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	ResponseOrderable: "enum",
	ResponseRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	StringExactFilter:{
		eq:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		le:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		lt:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		ge:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		gt:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	StringFullTextFilter:{
		alloftext:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		anyoftext:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	StringHashFilter:{
		eq:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	StringRegExpFilter:{
		regexp:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	StringTermFilter:{
		allofterms:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		anyofterms:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	TagFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		not:{
			type:"TagFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	TagInput:{
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		title:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		description:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		icon:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	TagOrder:{
		asc:{
			type:"TagOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"TagOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"TagOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	TagOrderable: "enum",
	TagRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateActivityInput:{
		filter:{
			type:"ActivityFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchActivity",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateAgentInput:{
		filter:{
			type:"AgentFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchAgent",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateArticleInput:{
		filter:{
			type:"ArticleFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchArticle",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateCandidateInput:{
		filter:{
			type:"CandidateFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchCandidate",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateCompanyInput:{
		filter:{
			type:"CompanyFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchCompany",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateContactInput:{
		filter:{
			type:"ContactFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchContact",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateDonationInput:{
		filter:{
			type:"DonationFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchDonation",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateElectionInput:{
		filter:{
			type:"ElectionFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchElection",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateEventInput:{
		filter:{
			type:"EventFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchEvent",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateFundRaisingDriveInput:{
		filter:{
			type:"FundRaisingDriveFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchFundRaisingDrive",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateIssueInput:{
		filter:{
			type:"IssueFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchIssue",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateItemInput:{
		filter:{
			type:"ItemFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchItem",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateLandingPageInput:{
		filter:{
			type:"LandingPageFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchLandingPage",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateLayoutInput:{
		filter:{
			type:"LayoutFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchLayout",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateMovementInput:{
		filter:{
			type:"MovementFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchMovement",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateNoteInput:{
		filter:{
			type:"NoteFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchNote",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateOpportunityInput:{
		filter:{
			type:"OpportunityFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchOpportunity",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdatePetitionInput:{
		filter:{
			type:"PetitionFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchPetition",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdatePollInput:{
		filter:{
			type:"PollFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchPoll",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateQuestionInput:{
		filter:{
			type:"QuestionFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchQuestion",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateRespondantInput:{
		filter:{
			type:"RespondantFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchRespondant",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateResponseInput:{
		filter:{
			type:"ResponseFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchResponse",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateTagInput:{
		filter:{
			type:"TagFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchTag",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	UpdateUserInput:{
		filter:{
			type:"UserFilter",
			array:false,
			arrayRequired:false,
			required:true
		},
		patch:{
			type:"PatchUser",
			array:false,
			arrayRequired:false,
			required:true
		}
	},
	User:{
		movementsOwned:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		donationsMade:{
			filter:{
				type:"FundRaisingDriveFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"FundRaisingDriveOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		supporting:{
			filter:{
				type:"MovementFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"MovementOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		},
		volunteeringAt:{
			filter:{
				type:"OpportunityFilter",
				array:false,
				arrayRequired:false,
				required:false
			},
			order:{
				type:"OpportunityOrder",
				array:false,
				arrayRequired:false,
				required:false
			},
			first:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			},
			offset:{
				type:"Int",
				array:false,
				arrayRequired:false,
				required:false
			}
		}
	},
	UserFilter:{
		ids:{
			type:"ID",
			array:true,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"StringHashFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		and:{
			type:"UserFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		or:{
			type:"UserFilter",
			array:false,
			arrayRequired:false,
			required:false
		},
		not:{
			type:"UserFilter",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	UserInput:{
		firstName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		lastName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		dateModified:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		datePublished:{
			type:"DateTime",
			array:false,
			arrayRequired:false,
			required:false
		},
		displayName:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:true
		},
		slug:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		bio:{
			type:"String",
			array:false,
			arrayRequired:false,
			required:false
		},
		movementsOwned:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		donationsMade:{
			type:"FundRaisingDriveRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		supporting:{
			type:"MovementRef",
			array:true,
			arrayRequired:false,
			required:false
		},
		volunteeringAt:{
			type:"OpportunityRef",
			array:true,
			arrayRequired:false,
			required:false
		}
	},
	UserOrder:{
		asc:{
			type:"UserOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		desc:{
			type:"UserOrderable",
			array:false,
			arrayRequired:false,
			required:false
		},
		then:{
			type:"UserOrder",
			array:false,
			arrayRequired:false,
			required:false
		}
	},
	UserOrderable: "enum",
	UserRef:{
		id:{
			type:"ID",
			array:false,
			arrayRequired:false,
			required:true
		}
	}
}

export const ReturnTypes: Record<string,any> = {
	Activity:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		agent:"Agent",
		user:"User",
		text:"String"
	},
	AddActivityPayload:{
		activity:"Activity"
	},
	AddAgentPayload:{
		agent:"Agent"
	},
	AddArticlePayload:{
		article:"Article"
	},
	AddCandidatePayload:{
		candidate:"Candidate"
	},
	AddCompanyPayload:{
		company:"Company"
	},
	AddContactPayload:{
		contact:"Contact"
	},
	AddDonationPayload:{
		donation:"Donation"
	},
	AddElectionPayload:{
		election:"Election"
	},
	AddEventPayload:{
		event:"Event"
	},
	AddFundRaisingDrivePayload:{
		fundraisingdrive:"FundRaisingDrive"
	},
	AddIssuePayload:{
		issue:"Issue"
	},
	AddLandingPagePayload:{
		landingpage:"LandingPage"
	},
	AddLayoutPayload:{
		layout:"Layout"
	},
	AddMovementPayload:{
		movement:"Movement"
	},
	AddNotePayload:{
		note:"Note"
	},
	AddOpportunityPayload:{
		opportunity:"Opportunity"
	},
	AddPetitionPayload:{
		petition:"Petition"
	},
	AddPollPayload:{
		poll:"Poll"
	},
	AddQuestionPayload:{
		question:"Question"
	},
	AddRespondantPayload:{
		respondant:"Respondant"
	},
	AddResponsePayload:{
		response:"Response"
	},
	AddTagPayload:{
		tag:"Tag"
	},
	AddUserPayload:{
		user:"User"
	},
	Agent:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		user:"User",
		movement:"Movement",
		contacts:"Contact",
		notes:"Note",
		activities:"Activity"
	},
	Article:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		preview:"String",
		content:"String",
		movements:"Movement"
	},
	Candidate:{
		firstName:"String",
		lastName:"String",
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		elections:"Election",
		platform:"String",
		movements:"Movement"
	},
	Company:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		name:"String",
		slug:"String",
		boycotting:"Movement",
		supporting:"Movement"
	},
	Contact:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		user:"User",
		movement:"Movement",
		phoneNumber:"String",
		email:"String",
		address:"String",
		notes:"Note",
		assignedAgents:"Agent"
	},
	DeleteActivityPayload:{
		msg:"String"
	},
	DeleteAgentPayload:{
		msg:"String"
	},
	DeleteArticlePayload:{
		msg:"String"
	},
	DeleteCandidatePayload:{
		msg:"String"
	},
	DeleteCompanyPayload:{
		msg:"String"
	},
	DeleteContactPayload:{
		msg:"String"
	},
	DeleteDonationPayload:{
		msg:"String"
	},
	DeleteElectionPayload:{
		msg:"String"
	},
	DeleteEventPayload:{
		msg:"String"
	},
	DeleteFundRaisingDrivePayload:{
		msg:"String"
	},
	DeleteIssuePayload:{
		msg:"String"
	},
	DeleteItemPayload:{
		msg:"String"
	},
	DeleteLandingPagePayload:{
		msg:"String"
	},
	DeleteLayoutPayload:{
		msg:"String"
	},
	DeleteMovementPayload:{
		msg:"String"
	},
	DeleteNotePayload:{
		msg:"String"
	},
	DeleteOpportunityPayload:{
		msg:"String"
	},
	DeletePetitionPayload:{
		msg:"String"
	},
	DeletePollPayload:{
		msg:"String"
	},
	DeleteQuestionPayload:{
		msg:"String"
	},
	DeleteRespondantPayload:{
		msg:"String"
	},
	DeleteResponsePayload:{
		msg:"String"
	},
	DeleteTagPayload:{
		msg:"String"
	},
	DeleteUserPayload:{
		msg:"String"
	},
	Donation:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		user:"User",
		fundRaisingDrive:"FundRaisingDrive",
		amountDollars:"Int",
		amountCents:"Int"
	},
	Election:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		date:"DateTime",
		description:"String",
		electionType:"ElectionType",
		candidates:"Candidate",
		issues:"Issue"
	},
	Event:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		date:"DateTime",
		description:"String",
		body:"String",
		movements:"Movement"
	},
	FundRaisingDrive:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		goalType:"GoalType",
		donations:"Donation",
		movement:"Movement"
	},
	Issue:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		elections:"Election",
		summary:"String",
		content:"String",
		movements:"Movement"
	},
	Item:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime"
	},
	LandingPage:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		layout:"Layout"
	},
	Layout:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		landingPage:"LandingPage"
	},
	Movement:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		regionality:"Regionality",
		description:"String",
		tags:"Tag",
		owner:"User",
		homePage:"LandingPage",
		landingPages:"LandingPage",
		articles:"Article",
		supportingCompanies:"Company",
		boycottingCompanies:"Company",
		candidates:"Candidate",
		issues:"Issue",
		supporters:"User",
		friends:"Movement",
		events:"Event",
		opportunities:"Opportunity",
		petitions:"Petition",
		contacts:"Contact",
		polls:"Poll",
		fundRaisingDrives:"FundRaisingDrive",
		agents:"Agent"
	},
	Mutation:{
		updateItem:"UpdateItemPayload",
		deleteItem:"DeleteItemPayload",
		addUser:"AddUserPayload",
		updateUser:"UpdateUserPayload",
		deleteUser:"DeleteUserPayload",
		addMovement:"AddMovementPayload",
		updateMovement:"UpdateMovementPayload",
		deleteMovement:"DeleteMovementPayload",
		addLandingPage:"AddLandingPagePayload",
		updateLandingPage:"UpdateLandingPagePayload",
		deleteLandingPage:"DeleteLandingPagePayload",
		addLayout:"AddLayoutPayload",
		updateLayout:"UpdateLayoutPayload",
		deleteLayout:"DeleteLayoutPayload",
		addElection:"AddElectionPayload",
		updateElection:"UpdateElectionPayload",
		deleteElection:"DeleteElectionPayload",
		addCandidate:"AddCandidatePayload",
		updateCandidate:"UpdateCandidatePayload",
		deleteCandidate:"DeleteCandidatePayload",
		addIssue:"AddIssuePayload",
		updateIssue:"UpdateIssuePayload",
		deleteIssue:"DeleteIssuePayload",
		addCompany:"AddCompanyPayload",
		updateCompany:"UpdateCompanyPayload",
		deleteCompany:"DeleteCompanyPayload",
		addArticle:"AddArticlePayload",
		updateArticle:"UpdateArticlePayload",
		deleteArticle:"DeleteArticlePayload",
		addEvent:"AddEventPayload",
		updateEvent:"UpdateEventPayload",
		deleteEvent:"DeleteEventPayload",
		addOpportunity:"AddOpportunityPayload",
		updateOpportunity:"UpdateOpportunityPayload",
		deleteOpportunity:"DeleteOpportunityPayload",
		addPetition:"AddPetitionPayload",
		updatePetition:"UpdatePetitionPayload",
		deletePetition:"DeletePetitionPayload",
		addPoll:"AddPollPayload",
		updatePoll:"UpdatePollPayload",
		deletePoll:"DeletePollPayload",
		addRespondant:"AddRespondantPayload",
		updateRespondant:"UpdateRespondantPayload",
		deleteRespondant:"DeleteRespondantPayload",
		addQuestion:"AddQuestionPayload",
		updateQuestion:"UpdateQuestionPayload",
		deleteQuestion:"DeleteQuestionPayload",
		addResponse:"AddResponsePayload",
		updateResponse:"UpdateResponsePayload",
		deleteResponse:"DeleteResponsePayload",
		addTag:"AddTagPayload",
		updateTag:"UpdateTagPayload",
		deleteTag:"DeleteTagPayload",
		addFundRaisingDrive:"AddFundRaisingDrivePayload",
		updateFundRaisingDrive:"UpdateFundRaisingDrivePayload",
		deleteFundRaisingDrive:"DeleteFundRaisingDrivePayload",
		addDonation:"AddDonationPayload",
		updateDonation:"UpdateDonationPayload",
		deleteDonation:"DeleteDonationPayload",
		addAgent:"AddAgentPayload",
		updateAgent:"UpdateAgentPayload",
		deleteAgent:"DeleteAgentPayload",
		addNote:"AddNotePayload",
		updateNote:"UpdateNotePayload",
		deleteNote:"DeleteNotePayload",
		addActivity:"AddActivityPayload",
		updateActivity:"UpdateActivityPayload",
		deleteActivity:"DeleteActivityPayload",
		addContact:"AddContactPayload",
		updateContact:"UpdateContactPayload",
		deleteContact:"DeleteContactPayload"
	},
	Note:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		agent:"Agent",
		contact:"Contact",
		text:"String"
	},
	Opportunity:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		date:"DateTime",
		description:"String",
		body:"String",
		movement:"Movement",
		volunteers:"User"
	},
	Person:{
		firstName:"String",
		lastName:"String"
	},
	Petition:{
		title:"String",
		slug:"String",
		description:"String",
		body:"String",
		goal:"Int",
		signers:"User",
		movements:"Movement"
	},
	Poll:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		slug:"String",
		respondants:"Respondant",
		questions:"Question",
		movements:"Movement"
	},
	Query:{
		getItem:"Item",
		queryItem:"Item",
		queryPerson:"Person",
		getUser:"User",
		queryUser:"User",
		getMovement:"Movement",
		queryMovement:"Movement",
		getLandingPage:"LandingPage",
		queryLandingPage:"LandingPage",
		getLayout:"Layout",
		queryLayout:"Layout",
		getElection:"Election",
		queryElection:"Election",
		getCandidate:"Candidate",
		queryCandidate:"Candidate",
		getIssue:"Issue",
		queryIssue:"Issue",
		getCompany:"Company",
		queryCompany:"Company",
		getArticle:"Article",
		queryArticle:"Article",
		getEvent:"Event",
		queryEvent:"Event",
		getOpportunity:"Opportunity",
		queryOpportunity:"Opportunity",
		queryPetition:"Petition",
		getPoll:"Poll",
		queryPoll:"Poll",
		getRespondant:"Respondant",
		queryRespondant:"Respondant",
		getQuestion:"Question",
		queryQuestion:"Question",
		getResponse:"Response",
		queryResponse:"Response",
		getTag:"Tag",
		queryTag:"Tag",
		getFundRaisingDrive:"FundRaisingDrive",
		queryFundRaisingDrive:"FundRaisingDrive",
		getDonation:"Donation",
		queryDonation:"Donation",
		getAgent:"Agent",
		queryAgent:"Agent",
		getNote:"Note",
		queryNote:"Note",
		getActivity:"Activity",
		queryActivity:"Activity",
		getContact:"Contact",
		queryContact:"Contact"
	},
	Question:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		question:"String",
		choices:"String"
	},
	Respondant:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		user:"User",
		responses:"Response"
	},
	Response:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		respondant:"Respondant",
		question:"Question",
		answer:"String"
	},
	Tag:{
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		title:"String",
		description:"String",
		icon:"String"
	},
	UpdateActivityPayload:{
		activity:"Activity"
	},
	UpdateAgentPayload:{
		agent:"Agent"
	},
	UpdateArticlePayload:{
		article:"Article"
	},
	UpdateCandidatePayload:{
		candidate:"Candidate"
	},
	UpdateCompanyPayload:{
		company:"Company"
	},
	UpdateContactPayload:{
		contact:"Contact"
	},
	UpdateDonationPayload:{
		donation:"Donation"
	},
	UpdateElectionPayload:{
		election:"Election"
	},
	UpdateEventPayload:{
		event:"Event"
	},
	UpdateFundRaisingDrivePayload:{
		fundraisingdrive:"FundRaisingDrive"
	},
	UpdateIssuePayload:{
		issue:"Issue"
	},
	UpdateItemPayload:{
		item:"Item"
	},
	UpdateLandingPagePayload:{
		landingpage:"LandingPage"
	},
	UpdateLayoutPayload:{
		layout:"Layout"
	},
	UpdateMovementPayload:{
		movement:"Movement"
	},
	UpdateNotePayload:{
		note:"Note"
	},
	UpdateOpportunityPayload:{
		opportunity:"Opportunity"
	},
	UpdatePetitionPayload:{
		petition:"Petition"
	},
	UpdatePollPayload:{
		poll:"Poll"
	},
	UpdateQuestionPayload:{
		question:"Question"
	},
	UpdateRespondantPayload:{
		respondant:"Respondant"
	},
	UpdateResponsePayload:{
		response:"Response"
	},
	UpdateTagPayload:{
		tag:"Tag"
	},
	UpdateUserPayload:{
		user:"User"
	},
	User:{
		firstName:"String",
		lastName:"String",
		id:"ID",
		dateModified:"DateTime",
		datePublished:"DateTime",
		displayName:"String",
		slug:"String",
		bio:"String",
		movementsOwned:"Movement",
		donationsMade:"FundRaisingDrive",
		supporting:"Movement",
		volunteeringAt:"Opportunity"
	}
}

export class GraphQLError extends Error {
    constructor(response) {
      super("");
      console.error(response);
    }
    toString() {
      return "GraphQL Response Error";
    }
  }


  export const ScalarResolver = (scalar, value) => {
    switch (scalar) {
      case 'String':
        return  `"${value.replace(/"/g, '\\\"')}"`;
      case 'Int':
        return `${value}`;
      case 'Float':
        return `${value}`;
      case 'Boolean':
        return `${value}`;
      case 'ID':
        return `"${value}"`;
      case 'enum':
        return `${value}`;
      case 'scalar':
        return `${value}`;
      default:
        return false;
    }
  };

  export const TypesPropsResolver = ({
    value,
    type,
    name,
    key,
    blockArrays
  }) => {
    if (value === null) {
      return `null`;
    }
    let resolvedValue = AllTypesProps[type][name];
    if (key) {
      resolvedValue = resolvedValue[key];
    }
    if (!resolvedValue) {
      throw new Error(`Cannot resolve ${type} ${name}${key ? ` ${key}` : ''}`)
    }
    const typeResolved = resolvedValue.type;
    const isArray = resolvedValue.array;
    if (isArray && !blockArrays) {
      return `[${value
        .map((v) => TypesPropsResolver({ value: v, type, name, key, blockArrays: true }))
        .join(',')}]`;
    }
    const reslovedScalar = ScalarResolver(typeResolved, value);
    if (!reslovedScalar) {
      const resolvedType = AllTypesProps[typeResolved];
      if (typeof resolvedType === 'object') {
        const argsKeys = Object.keys(resolvedType);
        return `{${argsKeys
          .filter((ak) => value[ak] !== undefined)
          .map(
            (ak) => `${ak}:${TypesPropsResolver({ value: value[ak], type: typeResolved, name: ak })}`
          )}}`;
      }
      return ScalarResolver(AllTypesProps[typeResolved], value);
    }
    return reslovedScalar;
  };

  const isArrayFunction = (
    parent,
    a
  ) => {
    const [values, r] = a;
    const [mainKey, key, ...keys] = parent;
    const keyValues = Object.keys(values);

    if (!keys.length) {
        return keyValues.length > 0
          ? `(${keyValues
              .map(
                (v) =>
                  `${v}:${TypesPropsResolver({
                    value: values[v],
                    type: mainKey,
                    name: key,
                    key: v
                  })}`
              )
              .join(',')})${r ? traverseToSeekArrays(parent, r) : ''}`
          : traverseToSeekArrays(parent, r);
      }

    const [typeResolverKey] = keys.splice(keys.length - 1, 1);
    let valueToResolve = ReturnTypes[mainKey][key];
    for (const k of keys) {
      valueToResolve = ReturnTypes[valueToResolve][k];
    }

    const argumentString =
      keyValues.length > 0
        ? `(${keyValues
            .map(
              (v) =>
                `${v}:${TypesPropsResolver({
                  value: values[v],
                  type: valueToResolve,
                  name: typeResolverKey,
                  key: v
                })}`
            )
            .join(',')})${r ? traverseToSeekArrays(parent, r) : ''}`
        : traverseToSeekArrays(parent, r);
    return argumentString;
  };

  const resolveKV = (k, v) =>
    typeof v === 'boolean' ? k : typeof v === 'object' ? `${k}{${objectToTree(v)}}` : `${k}${v}`;

  const objectToTree = (o) =>
    `{${Object.keys(o).map((k) => `${resolveKV(k, o[k])}`).join(' ')}}`;

const traverseToSeekArrays = (parent, a) => {
  if (!a) return '';
  if (Object.keys(a).length === 0) {
    return '';
  }
  let b = {};
  if (Array.isArray(a)) {
    return isArrayFunction([...parent], a);
  } else {
    if (typeof a === 'object') {
      Object.keys(a).map((k) => {
        if (k === '__alias') {
          Object.keys(a[k]).map((aliasKey) => {
            const aliasOperations = a[k][aliasKey];
            const aliasOperationName = Object.keys(aliasOperations)[0];
            const aliasOperation = aliasOperations[aliasOperationName];
            b[
              `${aliasOperationName}__alias__${aliasKey}: ${aliasOperationName}`
            ] = traverseToSeekArrays([...parent, aliasOperationName], aliasOperation);
          });
        } else {
          b[k] = traverseToSeekArrays([...parent, k], a[k]);
        }
      });
    } else {
      return '';
    }
  }
  return objectToTree(b);
};

  const buildQuery = (type, a) =>
    traverseToSeekArrays([type], a)

  const queryConstruct = (t) => (o) => `${t.toLowerCase()}${buildQuery(t, o)}`;

  const fullChainConstruct = (options) => (t) => (o) => apiFetch(options, queryConstruct(t)(o));
  const seekForAliases = (o) => {
    if (typeof o === 'object' && o) {
      const keys = Object.keys(o);
      if (keys.length < 1) {
        return;
      }
      keys.forEach((k) => {
        const value = o[k];
        if (k.indexOf('__alias__') !== -1) {
          const [operation, alias] = k.split('__alias__');
          o[alias] = {
            [operation]: value
          };
          delete o[k];
        } else {
          if (Array.isArray(value)) {
            value.forEach(seekForAliases);
          } else {
            if (typeof value === 'object') {
              seekForAliases(value);
            }
          }
        }
      });
    }
  };
  
const handleFetchResponse = response => {
  if (!response.ok) {
    return new Promise((resolve, reject) => {
      response.text().then(text => {
        try { reject(JSON.parse(text)); }
        catch (err) { reject(text); }
      }).catch(reject);
    });
  }
  return response.json();
};

const apiFetch = (options, query) => {
    const fetchFunction = fetch;
    let queryString = query;
    let fetchOptions = options[1] || {};
    if (fetchOptions.method && fetchOptions.method === 'GET') {
      queryString = encodeURIComponent(query);
      return fetchFunction(`${options[0]}?query=${queryString}`, fetchOptions)
        .then(handleFetchResponse)
        .then((response) => {
          if (response.errors) {
            throw new GraphQLError(response);
          }
          seekForAliases(response.data)
          return response.data;
        });
    }
    return fetchFunction(`${options[0]}`, {
      body: JSON.stringify({ query: queryString }),
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      ...fetchOptions
    })
      .then(handleFetchResponse)
      .then((response) => {
        if (response.errors) {
          throw new GraphQLError(response);
        }
        seekForAliases(response.data)
        return response.data;
      });
  };
    

  export const Chain = (...options) => ({
    Query: (o) =>
    fullChainConstruct(options)('Query')(o).then(
      (response) => response
    ),
Mutation: (o) =>
    fullChainConstruct(options)('Mutation')(o).then(
      (response) => response
    )
  });
  export const Zeus = {
    Query: (o) => queryConstruct('Query')(o),
Mutation: (o) => queryConstruct('Mutation')(o)
  };
  export const Cast = {
    Query: (o) => (b) => o,
Mutation: (o) => (b) => o
  };
    

export const Gql = Chain('http://localhost:9000/graphql')